<?xml version="1.0"?>
<script>
	<sql id="1">CREATE TRIGGER tb_atualizacoes_before_insert BEFORE INSERT ON tb_atualizacoes FOR EACH ROW BEGIN SET NEW.dt_cadastro :=	NOW(); END;</sql>
	<sql id="2">CREATE TRIGGER tb_atualizacoes_before_update BEFORE UPDATE ON tb_atualizacoes FOR EACH ROW BEGIN SET NEW.dt_atualizacao	:=	NOW(); END;</sql>
	<sql id="3">CREATE ALGORITHM=UNDEFINED SQL SECURITY DEFINER VIEW tb_clientesemail_v AS select a.id AS ID, a.id_cliente AS ID_CLIENTE, b.ds_setor AS DS_SETOR, a.ds_email AS DS_EMAIL, a.recebe_aso AS RECEBE_ASO, b.id AS ID_SETOR from (tb_clientesemail a join tb_setores b on((b.id = a.id_setor))); </sql>
	<sql id="4">CREATE ALGORITHM=UNDEFINED SQL SECURITY DEFINER VIEW tb_enderecoscli_v AS select b.id AS id, b.dt_cadastro AS dt_cadastro, b.dt_atualizacao AS dt_atualizacao, b.id_tipoend AS id_tipoend, b.logradouro AS logradouro, b.nr_logradouro AS nr_logradouro, b.nr_regiao AS nr_regiao, b.nr_estado AS nr_estado, b.nr_cidade AS nr_cidade, b.ds_bairro AS ds_bairro, a.id_cliente AS id_cliente, a.id_endereco AS id_endereco, c.ds_tipo AS ds_tipo, d.Nome AS regiao, e.Nome AS estado, f.Nome AS cidade from (((((tb_outrosendcli a join tb_enderecos b on((a.id_endereco = b.id))) join tb_tipoend c on((c.id = b.id_tipoend))) join tb_regiao d on((d.Id = b.nr_regiao))) join tb_estado e on((e.Id = b.nr_estado))) join tb_municipio f on((f.Id = b.nr_cidade))); </sql>
	<sql id="5">CREATE ALGORITHM=UNDEFINED SQL SECURITY DEFINER VIEW tb_enderecos_v AS select a.id AS id, a.dt_cadastro AS dt_cadastro, a.dt_atualizacao AS dt_atualizacao, a.id_tipoend AS id_tipoend, a.logradouro AS logradouro, a.nr_logradouro AS nr_logradouro, a.nr_regiao AS nr_regiao, a.nr_estado AS nr_estado, a.nr_cidade AS nr_cidade, a.ds_bairro AS ds_bairro, b.ds_tipo AS tipoend, c.Nome AS nomeregiao, d.Nome AS nomeestado, e.Nome AS nomecidade from ((((tb_enderecos a left join tb_tipoend b on((b.id = a.id_tipoend))) left join tb_regiao c on((c.Id = a.nr_regiao))) left join tb_estado d on((d.Id = a.nr_estado))) left join tb_municipio e on((e.Id = a.nr_cidade))); </sql>
	<sql id="6">CREATE ALGORITHM=UNDEFINED SQL SECURITY DEFINER VIEW tb_ordemserv_v AS select a.id AS id, a.dt_cadastro AS dt_cadastro, a.dt_atualizacao AS dt_atualizacao, a.titulo AS titulo, a.desc_os AS desc_os, a.enc_os_usuario AS enc_os_usuario, a.status AS status, b.ds_status AS ds_status from (tb_ordemserv a join tb_statusoss b on((b.id = a.status))); </sql>
	<sql id="7">CREATE TABLE tb_tipohistorico_os (id INT NOT NULL AUTO_INCREMENT, dt_cadastro DATETIME NULL, dt_atualizacao DATETIME NULL, ds_tipohist VARCHAR(50) NULL DEFAULT NULL, is_ativo INT NULL DEFAULT 1, PRIMARY KEY (id)) COLLATE=utf8mb4_0900_ai_ci; </sql>
	<sql id="8">CREATE TRIGGER tb_tipohistorico_os_before_insert BEFORE INSERT ON tb_tipohistorico_os FOR EACH ROW BEGIN SET NEW.dt_cadastro :=	NOW(); END;	</sql>
	<sql id="9">CREATE TRIGGER tb_tipohistorico_os_before_update BEFORE UPDATE ON tb_tipohistorico_os FOR EACH ROW BEGIN SET NEW.dt_atualizacao	:=	NOW(); END; </sql>
	<sql id="10">INSERT INTO TB_TIPOHISTORICO_OS (DS_TIPOHIST) VALUES ('Comunicação interna');</sql>
	<sql id="11">INSERT INTO TB_TIPOHISTORICO_OS (DS_TIPOHIST) VALUES ('Atualização');</sql>
	<sql id="12">UPDATE TB_ORDEMSERV SET STATUS = 5 WHERE ID = 2;</sql>
	<sql id="13">CREATE TABLE tb_historicoos (id INT NOT NULL AUTO_INCREMENT, dt_cadastro DATETIME NULL,dt_atualizacao DATETIME NULL, id_usuario INT NULL DEFAULT NULL, id_tipohist INT NULL DEFAULT NULL, id_ordem INT NULL DEFAULT NULL, desc_historico VARCHAR(4000) NULL DEFAULT NULL, PRIMARY KEY (id), CONSTRAINT FK__tb_tipohistorico_os FOREIGN KEY (id_tipohist) REFERENCES tb_tipohistorico_os (id) ON UPDATE NO ACTION ON DELETE NO ACTION, CONSTRAINT FK__tb_ordemserv FOREIGN KEY (id_ordem) REFERENCES tb_ordemserv (id) ON UPDATE NO ACTION ON DELETE NO ACTION, CONSTRAINT FK__tb_usuarios_historicoos FOREIGN KEY (id_usuario) REFERENCES tb_usuarios (id) ON UPDATE NO ACTION ON DELETE NO ACTION) COLLATE=utf8mb4_0900_ai_ci;</sql>
	<sql id="14">CREATE TRIGGER tb_historicoos_before_insert BEFORE INSERT ON tb_historicoos FOR EACH ROW BEGIN SET NEW.dt_cadastro	:=	NOW(); END;</sql>
	<sql id="15">CREATE TRIGGER tb_historicoos_before_update BEFORE UPDATE ON tb_historicoos FOR EACH ROW BEGIN SET NEW.dt_atualizacao	:=	NOW(); END;</sql>
	<sql id="16">CREATE PROCEDURE HistoricoAutom(IN id_tipohist_p INT, IN id_ordem_p INT, IN ds_historico_p VARCHAR(4000)) LANGUAGE SQL NOT DETERMINISTIC CONTAINS SQL SQL SECURITY DEFINER COMMENT 'Insere histórico automático' BEGIN INSERT INTO tb_historicoos (id_tipohist,id_ordem,desc_historico) VALUES (id_tipohist_p,id_ordem_p,ds_historico_p); END;</sql>
	<sql id="17">DROP TRIGGER IF EXISTS tb_ordemserv_before_update;</sql>
	<sql id="18">ALTER TABLE tb_usuarios ADD COLUMN pode_usar INT NULL DEFAULT '1' AFTER parametros; </sql>
	<sql id="19">INSERT INTO TB_USUARIOS (USUARIO,SENHA,PARAMETROS,PODE_USAR) VALUES ('WINDOWS','BC8187E7121792235DE0FE4911E11796DAB5BBE3',1,0);</sql>
	<sql id="20">CREATE DEFINER=root@localhost TRIGGER tb_ordemserv_before_update BEFORE UPDATE ON tb_ordemserv FOR EACH ROW BEGIN SET NEW.dt_atualizacao := NOW(); END;</sql>
	<sql id="21">CREATE ALGORITHM = UNDEFINED SQL SECURITY DEFINER VIEW tb_historicoos_lista_v AS SELECT A.id, A.id_tipohist, A.id_ordem, A.id_usuario, A.desc_historico, A.dt_cadastro, A.dt_atualizacao, B.ds_tipohist, C.usuario FROM tb_historicoos A INNER	JOIN tb_tipohistorico_os B ON B.id = A.id_tipohist LEFT	JOIN tb_usuarios C ON C.id = a.id_usuario;</sql>
	<sql id="22">CREATE TRIGGER tb_ordemserv_before_delete BEFORE DELETE ON tb_ordemserv FOR EACH ROW BEGIN DELETE FROM tb_historicoos WHERE id_ordem = OLD.id; END;</sql>
	<sql id="23">CREATE TABLE tb_anexosos (id INT NOT NULL AUTO_INCREMENT, dt_cadastro DATETIME NULL, dt_atualizacao DATETIME NULL, id_ordem INT NULL, nome_arquivo VARCHAR(50) NULL, caminho_arquivo VARCHAR(4000) NULL, PRIMARY KEY (id), CONSTRAINT FK__tb_ordemserv_anexos FOREIGN KEY (id_ordem) REFERENCES tb_ordemserv (id) ON UPDATE NO ACTION ON DELETE NO ACTION) COLLATE='utf8mb4_0900_ai_ci';</sql>
	<sql id="24">CREATE TRIGGER tb_anexosos_before_insert BEFORE INSERT ON tb_anexosos FOR EACH ROW BEGIN SET NEW.DT_CADASTRO := NOW(); END;</sql>
	<sql id="25">CREATE TRIGGER tb_anexosos_before_update BEFORE UPDATE ON tb_anexosos FOR EACH ROW BEGIN SET NEW.DT_ATUALIZACAO := NOW(); END;</sql>
	<sql id="26">DROP TRIGGER IF EXISTS tb_ordemserv_before_delete;</sql>
	<sql id="27">CREATE DEFINER=root@localhost TRIGGER tb_ordemserv_before_delete BEFORE DELETE ON tb_ordemserv FOR EACH ROW BEGIN DELETE FROM tb_historicoos WHERE id_ordem = OLD.id; DELETE FROM tb_anexosos WHERE id_ordem = OLD.id; END;</sql>
	<sql id="28">ALTER TABLE tb_parametrosgerais CHANGE COLUMN permite_gravarlog permite_gravarlog VARCHAR(1) NULL DEFAULT NULL AFTER dt_atualizacao;</sql>
	<sql id="29">ALTER TABLE tb_parametrosgerais CHANGE COLUMN cria_novasordens cria_novasordens VARCHAR(1) NULL DEFAULT NULL AFTER dt_atualizacao;</sql>
	<sql id="30">UPDATE medisoft.tb_parametrosgerais SET permite_gravarlog='S' WHERE  id=1;</sql>
	<sql id="31">UPDATE medisoft.tb_parametrosgerais SET cria_novasordens='S' WHERE  id=1;</sql>
	<sql id="32">ALTER TABLE tb_parametrosgerais ADD COLUMN ds_listaordens VARCHAR(1) NULL DEFAULT 'S' AFTER ds_nomelogsql;</sql>
	<sql id="33">ALTER TABLE tb_parametrosgerais ADD COLUMN nome_parametro VARCHAR(50) NULL DEFAULT NULL AFTER dt_atualizacao;</sql>
	<sql id="34">UPDATE tb_parametrosgerais SET nome_parametro = 'ADMINISTRADOR' WHERE ID = 1;</sql>
	<sql id="35">ALTER TABLE tb_parametrosgerais ADD COLUMN ds_adicionahistorico VARCHAR(1) NULL DEFAULT 'S' AFTER ds_listaordens;</sql>
	<sql id="36">ALTER TABLE tb_parametrosgerais ADD COLUMN ds_adicionaanexos VARCHAR(1) NULL DEFAULT 'S' AFTER ds_adicionahistorico;</sql>
	<sql id="37">ALTER TABLE tb_parametrosgerais ADD COLUMN ds_acessaordensserv VARCHAR(1) NULL DEFAULT 'S' AFTER ds_adicionaanexos;</sql>
	<sql id="38">ALTER TABLE tb_parametrosgerais ADD COLUMN ds_imprimeordemserv VARCHAR(1) NULL DEFAULT 'S' AFTER ds_acessaordensserv;</sql>
	<sql id="39">CREATE TABLE tb_funcoessistema (id INT NOT NULL AUTO_INCREMENT,dt_cadastro DATETIME NULL,dt_atualizacao DATETIME NULL,nome_funcao VARCHAR(50) NULL DEFAULT NULL,PRIMARY KEY (id))COLLATE='utf8mb4_0900_ai_ci';</sql>
	<sql id="40">CREATE TRIGGER tb_funcoessistema_before_insert BEFORE INSERT ON tb_funcoessistema FOR EACH ROW BEGIN SET NEW.DT_CADASTRO := NOW(); END;</sql>
	<sql id="41">CREATE TRIGGER tb_funcoessistema_before_update BEFORE UPDATE ON tb_funcoessistema FOR EACH ROW BEGIN SET NEW.DT_ATUALIZACAO := NOW(); END;</sql>
	<sql id="42">CREATE TABLE tb_relatorio (id INT NOT NULL AUTO_INCREMENT,dt_cadastro DATETIME NULL,dt_atualizacao DATETIME NULL,nome_relatorio VARCHAR(50) NULL DEFAULT NULL,id_funcao INT NULL DEFAULT NULL,PRIMARY KEY (id),CONSTRAINT FK__tb_funcoessistema FOREIGN KEY (id_funcao) REFERENCES tb_funcoessistema (id) ON UPDATE NO ACTION ON DELETE NO ACTION) COLLATE='utf8mb4_0900_ai_ci';</sql>
	<sql id="43">CREATE TRIGGER tb_relatorio_before_insert BEFORE INSERT ON tb_relatorio FOR EACH ROW BEGIN SET NEW.DT_CADASTRO := NOW(); END;</sql>
	<sql id="44">CREATE TRIGGER tb_relatorio_before_update BEFORE UPDATE ON tb_relatorio FOR EACH ROW BEGIN SET NEW.DT_ATUALIZACAO := NOW(); END;</sql>
	<sql id="45">CREATE TABLE tb_tipocamporelat (id INT NOT NULL AUTO_INCREMENT,dt_cadastro DATETIME NULL,dt_atualizacao DATETIME NULL,nome_campo VARCHAR(50) NULL DEFAULT NULL,PRIMARY KEY (id)) COLLATE='utf8mb4_0900_ai_ci';</sql>
	<sql id="46">CREATE TRIGGER tb_tipocamporelat_before_insert BEFORE INSERT ON tb_tipocamporelat FOR EACH ROW BEGIN SET NEW.DT_CADASTRO := NOW(); END;</sql>
	<sql id="47">CREATE TRIGGER tb_tipocamporelat_before_update BEFORE UPDATE ON tb_tipocamporelat FOR EACH ROW BEGIN SET NEW.DT_ATUALIZACAO := NOW(); END;</sql>
	<sql id="48">INSERT INTO TB_TIPOCAMPORELAT (NOME_CAMPO) VALUES ('TRLReport');</sql>
	<sql id="49">INSERT INTO TB_TIPOCAMPORELAT (NOME_CAMPO) VALUES ('TRLBand');</sql>
	<sql id="50">INSERT INTO TB_TIPOCAMPORELAT (NOME_CAMPO) VALUES ('TRLDetailGrid');</sql>
	<sql id="51">INSERT INTO TB_TIPOCAMPORELAT (NOME_CAMPO) VALUES ('TRLGroup');</sql>
	<sql id="52">INSERT INTO TB_TIPOCAMPORELAT (NOME_CAMPO) VALUES ('TRLSubDetail');</sql>
	<sql id="53">INSERT INTO TB_TIPOCAMPORELAT (NOME_CAMPO) VALUES ('TRLLabel');</sql>
	<sql id="54">INSERT INTO TB_TIPOCAMPORELAT (NOME_CAMPO) VALUES ('TRLAngleLabel');</sql>
	<sql id="55">INSERT INTO TB_TIPOCAMPORELAT (NOME_CAMPO) VALUES ('TRLDBText');</sql>
	<sql id="56">INSERT INTO TB_TIPOCAMPORELAT (NOME_CAMPO) VALUES ('TRLMemo');</sql>
	<sql id="57">INSERT INTO TB_TIPOCAMPORELAT (NOME_CAMPO) VALUES ('TRLDBMemo');</sql>
	<sql id="58">INSERT INTO TB_TIPOCAMPORELAT (NOME_CAMPO) VALUES ('TRLRichText');</sql>
	<sql id="59">INSERT INTO TB_TIPOCAMPORELAT (NOME_CAMPO) VALUES ('TRLDBRichText');</sql>
	<sql id="60">INSERT INTO TB_TIPOCAMPORELAT (NOME_CAMPO) VALUES ('TRLImage');</sql>
	<sql id="61">INSERT INTO TB_TIPOCAMPORELAT (NOME_CAMPO) VALUES ('TRLSystemInfo');</sql>
	<sql id="62">INSERT INTO TB_TIPOCAMPORELAT (NOME_CAMPO) VALUES ('TRLDraw');</sql>
	<sql id="63">INSERT INTO TB_TIPOCAMPORELAT (NOME_CAMPO) VALUES ('TRLPanel');</sql>
	<sql id="64">INSERT INTO TB_TIPOCAMPORELAT (NOME_CAMPO) VALUES ('TRLDBResult');</sql>
	<sql id="65">INSERT INTO TB_TIPOCAMPORELAT (NOME_CAMPO) VALUES ('TRLBarcode');</sql>
	<sql id="66">INSERT INTO TB_TIPOCAMPORELAT (NOME_CAMPO) VALUES ('TRLDBBarcode');</sql>
	<sql id="67">INSERT INTO TB_TIPOCAMPORELAT (NOME_CAMPO) VALUES ('TRLPreview');</sql>
	<sql id="68">INSERT INTO TB_TIPOCAMPORELAT (NOME_CAMPO) VALUES ('TRLExpressionParser');</sql>
	<sql id="69">INSERT INTO TB_TIPOCAMPORELAT (NOME_CAMPO) VALUES ('TRLDraftFilter');</sql>
	<sql id="70">INSERT INTO TB_TIPOCAMPORELAT (NOME_CAMPO) VALUES ('TRLRichFilter');</sql>
	<sql id="71">INSERT INTO TB_TIPOCAMPORELAT (NOME_CAMPO) VALUES ('TRLHTMLFilter');</sql>
	<sql id="72">INSERT INTO TB_TIPOCAMPORELAT (NOME_CAMPO) VALUES ('TRLPDFFilter');</sql>
	<sql id="73">INSERT INTO TB_TIPOCAMPORELAT (NOME_CAMPO) VALUES ('TRLXLSFilter');</sql>
	<sql id="74">INSERT INTO TB_TIPOCAMPORELAT (NOME_CAMPO) VALUES ('TRLXLSXFilter');</sql>
	<sql id="75">INSERT INTO TB_TIPOCAMPORELAT (NOME_CAMPO) VALUES ('TRLPreviewSetup');</sql>
	<sql id="76">INSERT INTO TB_FUNCOESSISTEMA (NOME_FUNCAO) VALUES ('Ordem de serviço');</sql>
	<sql id="77">INSERT INTO TB_RELATORIO (NOME_RELATORIO,ID_FUNCAO) VALUES ('Informações sobre esta ordem de serviço',1);</sql>
	<sql id="78">CREATE TABLE tb_tipobandarelat (id INT NOT NULL AUTO_INCREMENT,dt_cadastro DATETIME NULL,dt_atualizacao DATETIME NULL,ds_tipobanda VARCHAR(50) NULL,PRIMARY KEY (id)) COLLATE='utf8mb4_0900_ai_ci';</sql>
	<sql id="79">CREATE TRIGGER tb_tipobandarelat_before_insert BEFORE INSERT ON tb_tipobandarelat FOR EACH ROW BEGIN SET NEW.DT_CADASTRO := NOW(); END;</sql>
	<sql id="80">CREATE TRIGGER tb_tipobandarelat_before_update BEFORE UPDATE ON tb_tipobandarelat FOR EACH ROW BEGIN SET NEW.DT_ATUALIZACAO := NOW(); END;</sql>
	<sql id="81">INSERT INTO TB_TIPOBANDARELAT (DS_TIPOBANDA) VALUES ('btColumnFooter');</sql>
	<sql id="82">INSERT INTO TB_TIPOBANDARELAT (DS_TIPOBANDA) VALUES ('btColumnHeader');</sql>
	<sql id="83">INSERT INTO TB_TIPOBANDARELAT (DS_TIPOBANDA) VALUES ('btDetail');</sql>
	<sql id="84">INSERT INTO TB_TIPOBANDARELAT (DS_TIPOBANDA) VALUES ('btFooter');</sql>
	<sql id="85">INSERT INTO TB_TIPOBANDARELAT (DS_TIPOBANDA) VALUES ('btHeader');</sql>
	<sql id="86">INSERT INTO TB_TIPOBANDARELAT (DS_TIPOBANDA) VALUES ('btSummary');</sql>
	<sql id="87">INSERT INTO TB_TIPOBANDARELAT (DS_TIPOBANDA) VALUES ('btTitle');</sql>
	<sql id="88">CREATE TABLE tb_camposrelatorio (id INT NOT NULL AUTO_INCREMENT,dt_cadastro DATETIME NULL,dt_atualizacao DATETIME NULL,AdjustableMargins INT NULL DEFAULT '1',AlignWithMargins INT NULL DEFAULT '1',AllowedBands_btHeader INT NULL DEFAULT '0',AllowedBands_btTitle INT NULL DEFAULT '0',AllowedBands_btColumnHeader INT NULL DEFAULT '0',AllowedBands_btDetail INT NULL DEFAULT '0',AllowedBands_btColumnFooter INT NULL DEFAULT '0',AllowedBands_btSummary INT NULL DEFAULT '0',AllowedBands_btFooter INT NULL DEFAULT '0',Background_Align VARCHAR(50) NULL DEFAULT 'faClient',Background_Arrange VARCHAR(50) NULL DEFAULT 'baAligned',Background_Autosize INT NULL DEFAULT '1',Background_Height INT NULL DEFAULT '40',Background_Picture VARCHAR(200) NULL DEFAULT NULL,Background_Stretch INT NULL DEFAULT '0',Background_Width INT NULL DEFAULT '40',Borders_Color VARCHAR(50) NULL DEFAULT NULL,Borders_DrawBottom INT NULL DEFAULT '0',Borders_DrawLeft INT NULL DEFAULT '0',Borders_DrawRight INT NULL DEFAULT '0',Borders_DrawTop INT NULL DEFAULT '0',Borders_FixedBottom INT NULL DEFAULT '0',Borders_FixedLeft INT NULL DEFAULT '0',Borders_FixedRight INT NULL DEFAULT '0',Borders_FixedTop INT NULL DEFAULT '0',Borders_Sides VARCHAR(50) NULL DEFAULT NULL,Borders_Style VARCHAR(50) NULL DEFAULT 'sdNone',Borders_Width INT NULL DEFAULT '1',Color VARCHAR(50) NULL DEFAULT NULL,CompositeOptions_NumberPage INT NULL DEFAULT '1',CompositeOptions_ResetPageNumber INT NULL DEFAULT '0',Degrade_Direction VARCHAR(50) NULL DEFAULT 'ddNone',Degrade_Granurality INT NULL DEFAULT '1',Degrade_OpositeColor VARCHAR(50) NULL DEFAULT 'clBlack',Font_Charset VARCHAR(50) NULL DEFAULT 'DEFAULT_CHARSET',Font_Color VARCHAR(50) NULL DEFAULT 'clBlack',Font_Height INT NULL DEFAULT '-13',Font_Name VARCHAR(50) NULL DEFAULT 'Arial',Font_Orientation INT NULL DEFAULT '0',Font_Pitch VARCHAR(50) NULL DEFAULT 'fpDefault',Page_Setup_Orientation VARCHAR(50) NULL DEFAULT 'poPortrait',Font_Quality VARCHAR(50) NULL DEFAULT 'fqDefault',Font_Size INT NULL DEFAULT '10',Font_Style_fsBold INT NULL DEFAULT '0',Font_Style_fsItalic INT NULL DEFAULT '0',Font_Style_fsUnderline INT NULL DEFAULT '0',Font_Style_fsStrikeOut INT NULL DEFAULT '0',PageSetup_Orientation VARCHAR(50) NULL DEFAULT 'poPortrait',PageSetup_PaperSize VARCHAR(50) NULL DEFAULT 'fpA4',PRIMARY KEY (id)) COLLATE='utf8mb4_0900_ai_ci';</sql>
	<sql id="89">CREATE TRIGGER tb_camposrelatorio_before_insert BEFORE INSERT ON tb_camposrelatorio FOR EACH ROW BEGIN SET NEW.DT_CADASTRO := NOW(); END;</sql>
	<sql id="90">CREATE TRIGGER tb_camposrelatorio_before_update BEFORE UPDATE ON tb_camposrelatorio FOR EACH ROW BEGIN SET NEW.DT_ATUALIZACAO := NOW(); END;</sql>
	<sql id="91">ALTER TABLE tb_camposrelatorio CHANGE COLUMN AdjustableMargins AdjustableMargins TINYINT(1) NULL DEFAULT '0' AFTER dt_atualizacao, CHANGE COLUMN AlignWithMargins AlignWithMargins TINYINT(1) NULL DEFAULT '0' AFTER AdjustableMargins, CHANGE COLUMN AllowedBands_btHeader AllowedBands_btHeader TINYINT(1) NULL DEFAULT '0' AFTER AlignWithMargins, CHANGE COLUMN AllowedBands_btTitle AllowedBands_btTitle TINYINT(1) NULL DEFAULT '0' AFTER AllowedBands_btHeader, CHANGE COLUMN AllowedBands_btColumnHeader AllowedBands_btColumnHeader TINYINT(1) NULL DEFAULT '0' AFTER AllowedBands_btTitle, CHANGE COLUMN AllowedBands_btDetail AllowedBands_btDetail TINYINT(1) NULL DEFAULT '0' AFTER AllowedBands_btColumnHeader, CHANGE COLUMN AllowedBands_btColumnFooter AllowedBands_btColumnFooter TINYINT(1) NULL DEFAULT '0' AFTER AllowedBands_btDetail, CHANGE COLUMN AllowedBands_btSummary AllowedBands_btSummary TINYINT(1) NULL DEFAULT '0' AFTER AllowedBands_btColumnFooter, CHANGE COLUMN AllowedBands_btFooter AllowedBands_btFooter TINYINT(1) NULL DEFAULT '0' AFTER AllowedBands_btSummary, CHANGE COLUMN Background_Autosize Background_Autosize TINYINT(1) NULL DEFAULT '0' AFTER Background_Arrange, CHANGE COLUMN Background_Height Background_Height TINYINT(1) NULL DEFAULT '0' AFTER Background_Autosize;</sql>
	<sql id="92">ALTER TABLE tb_camposrelatorio CHANGE COLUMN Background_Stretch Background_Stretch TINYINT(1) NULL DEFAULT '0' AFTER Background_Picture, CHANGE COLUMN Borders_DrawBottom Borders_DrawBottom TINYINT(1) NULL DEFAULT '0' AFTER Borders_Color, CHANGE COLUMN Borders_DrawLeft Borders_DrawLeft TINYINT(1) NULL DEFAULT '0' AFTER Borders_DrawBottom, CHANGE COLUMN Borders_DrawRight Borders_DrawRight TINYINT(1) NULL DEFAULT '0' AFTER Borders_DrawLeft, CHANGE COLUMN Borders_DrawTop Borders_DrawTop TINYINT(1) NULL DEFAULT '0' AFTER Borders_DrawRight, CHANGE COLUMN Borders_FixedBottom Borders_FixedBottom TINYINT(1) NULL DEFAULT '0' AFTER Borders_DrawTop, CHANGE COLUMN Borders_FixedLeft Borders_FixedLeft TINYINT(1) NULL DEFAULT '0' AFTER Borders_FixedBottom, CHANGE COLUMN Borders_FixedRight Borders_FixedRight TINYINT(1) NULL DEFAULT '0' AFTER Borders_FixedLeft, CHANGE COLUMN Borders_FixedTop Borders_FixedTop TINYINT(1) NULL DEFAULT '0' AFTER Borders_FixedRight, CHANGE COLUMN CompositeOptions_NumberPage CompositeOptions_NumberPage TINYINT(1) NULL DEFAULT '0' AFTER Color, CHANGE COLUMN CompositeOptions_ResetPageNumber CompositeOptions_ResetPageNumber TINYINT(1) NULL DEFAULT '0' AFTER CompositeOptions_NumberPage, CHANGE COLUMN Degrade_Granurality Degrade_Granurality TINYINT(1) NULL DEFAULT '0' AFTER Degrade_Direction, CHANGE COLUMN Font_Style_fsBold Font_Style_fsBold TINYINT(1) NULL DEFAULT '0' AFTER Font_Size, CHANGE COLUMN Font_Style_fsItalic Font_Style_fsItalic TINYINT(1) NULL DEFAULT '0' AFTER Font_Style_fsBold, CHANGE COLUMN Font_Style_fsUnderline Font_Style_fsUnderline TINYINT(1) NULL DEFAULT '0' AFTER Font_Style_fsItalic, 	CHANGE COLUMN Font_Style_fsStrikeOut Font_Style_fsStrikeOut TINYINT(1) NULL DEFAULT '0' AFTER Font_Style_fsUnderline;</sql>
	<sql id="93">CREATE TABLE tb_backgroundalign_relat (id INT NOT NULL AUTO_INCREMENT,dt_cadastro DATETIME NULL,dt_atualizacao DATETIME NULL,ds_align VARCHAR(50) NULL,PRIMARY KEY (id)) COLLATE='utf8mb4_0900_ai_ci';</sql>
	<sql id="94">CREATE TRIGGER tb_backgroundalign_relat_before_insert BEFORE INSERT ON tb_backgroundalign_relat FOR EACH ROW BEGIN SET NEW.DT_CADASTRO := NOW(); END;</sql>
	<sql id="95">CREATE TRIGGER tb_backgroundalign_relat_before_update BEFORE UPDATE ON tb_backgroundalign_relat FOR EACH ROW BEGIN SET NEW.DT_ATUALIZACAO := NOW(); END;</sql>
	<sql id="96">INSERT INTO TB_BACKGROUNDALIGN_RELAT (DS_ALIGN) VALUES ('faBottom');</sql>
	<sql id="97">INSERT INTO TB_BACKGROUNDALIGN_RELAT (DS_ALIGN) VALUES ('faBottomOnly');</sql>
	<sql id="98">INSERT INTO TB_BACKGROUNDALIGN_RELAT (DS_ALIGN) VALUES ('faCenter');</sql>
	<sql id="99">INSERT INTO TB_BACKGROUNDALIGN_RELAT (DS_ALIGN) VALUES ('faCenterBottom');</sql>
	<sql id="100">INSERT INTO TB_BACKGROUNDALIGN_RELAT (DS_ALIGN) VALUES ('faCenterLeft');</sql>
	<sql id="101">INSERT INTO TB_BACKGROUNDALIGN_RELAT (DS_ALIGN) VALUES ('faCenterRight');</sql>
	<sql id="102">INSERT INTO TB_BACKGROUNDALIGN_RELAT (DS_ALIGN) VALUES ('faCenterTop');</sql>
	<sql id="103">INSERT INTO TB_BACKGROUNDALIGN_RELAT (DS_ALIGN) VALUES ('faClient');</sql>
	<sql id="104">INSERT INTO TB_BACKGROUNDALIGN_RELAT (DS_ALIGN) VALUES ('faClientBottom');</sql>
	<sql id="105">INSERT INTO TB_BACKGROUNDALIGN_RELAT (DS_ALIGN) VALUES ('faClientLeft');</sql>
	<sql id="106">INSERT INTO TB_BACKGROUNDALIGN_RELAT (DS_ALIGN) VALUES ('faClientRight');</sql>
	<sql id="107">INSERT INTO TB_BACKGROUNDALIGN_RELAT (DS_ALIGN) VALUES ('faClientTop');</sql>
	<sql id="108">INSERT INTO TB_BACKGROUNDALIGN_RELAT (DS_ALIGN) VALUES ('faHeight');</sql>
	<sql id="109">INSERT INTO TB_BACKGROUNDALIGN_RELAT (DS_ALIGN) VALUES ('faLeft');</sql>
	<sql id="110">INSERT INTO TB_BACKGROUNDALIGN_RELAT (DS_ALIGN) VALUES ('faLeftBottom');</sql>
	<sql id="111">INSERT INTO TB_BACKGROUNDALIGN_RELAT (DS_ALIGN) VALUES ('faLeftMost');</sql>
	<sql id="112">INSERT INTO TB_BACKGROUNDALIGN_RELAT (DS_ALIGN) VALUES ('faLeftOnly');</sql>
	<sql id="113">INSERT INTO TB_BACKGROUNDALIGN_RELAT (DS_ALIGN) VALUES ('faLeftTop');</sql>
	<sql id="114">INSERT INTO TB_BACKGROUNDALIGN_RELAT (DS_ALIGN) VALUES ('faNone');</sql>
	<sql id="115">INSERT INTO TB_BACKGROUNDALIGN_RELAT (DS_ALIGN) VALUES ('faRight');</sql>
	<sql id="116">INSERT INTO TB_BACKGROUNDALIGN_RELAT (DS_ALIGN) VALUES ('faRightBottom');</sql>
	<sql id="117">INSERT INTO TB_BACKGROUNDALIGN_RELAT (DS_ALIGN) VALUES ('faRightMost');</sql>
	<sql id="118">INSERT INTO TB_BACKGROUNDALIGN_RELAT (DS_ALIGN) VALUES ('faRightOnly');</sql>
	<sql id="119">INSERT INTO TB_BACKGROUNDALIGN_RELAT (DS_ALIGN) VALUES ('faRightTop');</sql>
	<sql id="120">INSERT INTO TB_BACKGROUNDALIGN_RELAT (DS_ALIGN) VALUES ('faTop');</sql>
	<sql id="121">INSERT INTO TB_BACKGROUNDALIGN_RELAT (DS_ALIGN) VALUES ('faTopOnly');</sql>
	<sql id="122">INSERT INTO TB_BACKGROUNDALIGN_RELAT (DS_ALIGN) VALUES ('faWidth');</sql>
	<sql id="123">ALTER TABLE tb_camposrelatorio CHANGE COLUMN Background_Align Background_Align INT NULL DEFAULT '2' COLLATE 'utf8mb4_0900_ai_ci' AFTER AllowedBands_btFooter;</sql>
	<sql id="124">ALTER TABLE tb_camposrelatorio ADD CONSTRAINT FK_tb_camposrelatorio_tb_backgroundalign_relat FOREIGN KEY (Background_Align) REFERENCES tb_backgroundalign_relat (id) ON UPDATE NO ACTION ON DELETE NO ACTION;</sql>
	<sql id="125">CREATE TABLE tb_backgroundarrange_relat (id INT NOT NULL AUTO_INCREMENT,dt_cadastro DATETIME NULL,dt_atualizacao DATETIME NULL,ds_arrange VARCHAR(50) NULL,PRIMARY KEY (id)) COLLATE='utf8mb4_0900_ai_ci';</sql>
	<sql id="126">CREATE TRIGGER tb_backgroundarrange_relat_before_insert BEFORE INSERT ON tb_backgroundalign_relat FOR EACH ROW BEGIN SET NEW.DT_CADASTRO := NOW(); END;</sql>
	<sql id="127">CREATE TRIGGER tb_backgroundarrange_relat_before_update BEFORE UPDATE ON tb_backgroundalign_relat FOR EACH ROW BEGIN SET NEW.DT_ATUALIZACAO := NOW(); END;</sql>
	<sql id="128">ALTER TABLE tb_camposrelatorio CHANGE COLUMN Background_Arrange Background_Arrange INT NULL DEFAULT '1' COLLATE 'utf8mb4_0900_ai_ci' AFTER Background_Align;</sql>
	<sql id="129">ALTER TABLE tb_camposrelatorio ADD CONSTRAINT FK_tb_camposrelatorio_tb_backgroundarrange_relat FOREIGN KEY (Background_Arrange) REFERENCES tb_backgroundarrange_relat (id) ON UPDATE NO ACTION ON DELETE NO ACTION;</sql>
	<sql id="130">INSERT INTO TB_BACKGROUNDARRANGE_RELAT (DS_ARRANGE) VALUES ('baAligned');</sql>
	<sql id="131">INSERT INTO TB_BACKGROUNDARRANGE_RELAT (DS_ARRANGE) VALUES ('baCenter');</sql>
	<sql id="132">INSERT INTO TB_BACKGROUNDARRANGE_RELAT (DS_ARRANGE) VALUES ('baDistributed');</sql>
	<sql id="133">INSERT INTO TB_BACKGROUNDARRANGE_RELAT (DS_ARRANGE) VALUES ('baSidebySide');</sql>
</script>