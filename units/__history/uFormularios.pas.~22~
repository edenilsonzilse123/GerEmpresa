unit uFormularios;

interface

uses
  Vcl.Forms, System.Classes, System.SysUtils, IdHashSHA, ZAbstractConnection,
  ZConnection, Data.DB, ZAbstractRODataset, ZAbstractDataset, ZDataset;

  procedure CriarForm(InstanceClass: TComponentClass; var Reference; pTitulo:String=''; pModal:Boolean=True; pPosition:TPosition=poDesktopCenter);
  function  GetCriptogrado(pTexto:String):String;
  function  Logado(pLogin,pSenha:String):Boolean;

implementation

uses
  uDados;

procedure CriarForm(InstanceClass: TComponentClass; var Reference; pTitulo:String=''; pModal:Boolean=True; pPosition:TPosition=poDesktopCenter);
begin
  Application.CreateForm(InstanceClass,Reference);
  TForm(Reference).Caption  :=  pTitulo;
  TForm(Reference).Position :=  pPosition;
  if pModal then
    TForm(Reference).ShowModal
  else
    TForm(Reference).Show;
end;

function  GetCriptogrado(pTexto:String):String;
var
  SHA1:TIdHashSHA1;
begin
  SHA1  :=  TIdHashSHA1.Create;
  try
    Result  :=  SHA1.HashStringAsHex(AnsiUpperCase(pTexto));
  finally
    SHA1.Free;
  end;
end;

function  Logado(pLogin,pSenha:String):Boolean;
var
  zqLogin:TZQuery;
begin
  try
    pSenha  :=  GetCriptogrado(pSenha);
    zqLogin :=  TZQuery.Create(nil);
    with zqLogin do
    begin
      Connection  :=  DM.conDados;
      if Active then
        Close;
      SQL.Clear;
      SQL.Add('SELECT * FROM TB_USUARIOS WHERE USUARIO = ');
      SQL.Add(':PUSUARIO AND SENHA = :PSENHA');
      ParamByName('PUSUARIO').AsString  :=  pLogin;
      ParamByName('PSENHA').AsString    :=  pSenha;
      Open; First; FetchAll;
      Result  :=  (RecordCount >= 1);
    end;
  except
    FreeAndNil(zqLogin);
  end;
  FreeAndNil(zqLogin);
end;

end.
